name: "update-rpm-config"
description: "Set current version of agent in rpm config using API."
inputs:
  agent-language:
    description: "Language agent to configure (eg. python)"
    required: true
    default: "python"
  agent-version:
    description: "3-4 digit agent version number (eg. 1.2.3) with optional leading v (ignored)"
    required: true
  dry-run:
    description: "Dry Run"
    required: true
    default: "false"
  production-api-key:
    description: "API key for New Relic Production"
    required: false

runs:
  using: "composite"
  steps:
    - name: Trim potential leading v from agent version
      shell: bash
      run: |
        AGENT_VERSION=${{ inputs.agent-version }}
        echo "AGENT_VERSION=${AGENT_VERSION#"v"}" >> $GITHUB_ENV

    - name: Generate Payload
      shell: bash
      run: |
        echo "PAYLOAD='{ \"system_configuration\": { \"key\": \"${{ inputs.agent-language }}_agent_version\", \"value\": \"${{ env.AGENT_VERSION }}\" } }'" >> $GITHUB_ENV

    - name: Generate Content-Type
      shell: bash
      run: |
        echo "CONTENT_TYPE='Content-Type: application/json'" >> $GITHUB_ENV

    - name: Update system configuration page
      shell: bash
      if: ${{ inputs.dry-run == 'false' }}
      run: |
        curl -X POST 'https://api.newrelic.com/v2/system_configuration.json' \
        -H "X-Api-Key:${{ inputs.production-api-key }}" -i \
        -H ${{ env.CONTENT_TYPE }} \
        -d ${{ env.PAYLOAD }}

    - name: Verify system configuration update
      shell: bash
      if: ${{ inputs.dry-run == 'false' }}
      run: |
        PROD_VERSION=$(curl -X GET 'https://api.newrelic.com/v2/system_configuration.json' \
        -H "X-Api-Key:${{ inputs.production-api-key }}" \
        -H "${{ env.CONTENT_TYPE }}" | jq ".system_configurations | from_entries | .${{inputs.agent-language}}_agent_version")

        if [ "${{ env.AGENT_VERSION }}" != "$PROD_VERSION" ]; then
            echo "Version mismatch: $PROD_VERSION"
            exit 1
        fi

    - name: (dry-run) Update system configuration page
      shell: bash
      if: ${{ inputs.dry-run != 'false' }}
      run: |
        cat << EOF
            curl -X POST 'https://api.newrelic.com/v2/system_configuration.json' \
            -H "X-Api-Key:**REDACTED**" -i \
            -H ${{ env.CONTENT_TYPE }} \
            -d ${{ env.PAYLOAD }}
        EOF
