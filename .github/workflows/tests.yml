# Copyright 2010 New Relic, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Tests

on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'
  pull_request:
    branches:
      - main

jobs:
  python:

    strategy:
      matrix:
        test-directory: 
          - adapter_cheroot
          - adapter_uvicorn
          - agent_features
          - agent_streaming
          - agent_unittests
          - application_celery
          - component_flask_rest
          - framework_aiohttp
          - framework_bottle
          - framework_django
          - framework_falcon
          - framework_cherrypy
          - framework_fastapi
          - framework_flask
          - framework_pyramid
          - framework_sanic
          - framework_starlette
          - framework_tornado

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Get Date
      id: get-date
      run: |
        echo "::set-output name=date::$(/bin/date -u "+%Y-%m-%d")"
      shell: bash

    - name: Cache Tox and Pip (Linux)
      if: startsWith(runner.os, 'Linux')
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.test-directory }}-${{ hashFiles('tests/${{ matrix.test-directory }}/tox.ini', 'tests/base_requirements.txt') }}-${{ steps.get-date.outputs.date }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.test-directory }}-${{ hashFiles('tests/${{ matrix.test-directory }}/tox.ini', 'tests/base_requirements.txt') }}-
          ${{ runner.os }}-${{ matrix.test-directory }}-

    # Special case packages
    - name: Install libcurl-dev
      if: ${{ matrix.test-directory == 'framework_tornado' }}
      run: |
        sudo apt-get update
        sudo apt-get install libcurl4-openssl-dev

    # Set up all versions of python
    - uses: actions/setup-python@v2
      with:
        python-version: 2.7
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.5
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.6
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.7
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: pypy3
        architecture: x64

    # Setup pypy2 after pypy3 to ensure pypy isn't aliased to pypy3
    - uses: actions/setup-python@v2
      with:
        python-version: pypy2
        architecture: x64

    - name: Install Dependencies
      run: |
        pip install -U pip
        pip install -U wheel setuptools tox virtualenv!=20.0.24

    - name: Test
      run: |
        tox -vv -p auto -c tests/${{ matrix.test-directory }}/tox.ini
      env:
        TOX_PARALLEL_NO_SPINNER: 1
        PY_COLORS: 0

  postgres:

    strategy:
      matrix:
        test-directory: [datastore_asyncpg]

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 8080:5432
          - 8081:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Get Date
      id: get-date
      run: |
        echo "::set-output name=date::$(/bin/date -u "+%Y-%m-%d")"
      shell: bash

    - name: Cache Tox and Pip (Linux)
      if: startsWith(runner.os, 'Linux')
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.test-directory }}-${{ hashFiles('tests/${{ matrix.test-directory }}/tox.ini', 'tests/base_requirements.txt') }}-${{ steps.get-date.outputs.date }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.test-directory }}-${{ hashFiles('tests/${{ matrix.test-directory }}/tox.ini', 'tests/base_requirements.txt') }}-
          ${{ runner.os }}-${{ matrix.test-directory }}-

    # Set up all versions of python
    - uses: actions/setup-python@v2
      with:
        python-version: 2.7
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.5
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.6
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.7
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: pypy3
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: pypy2
        architecture: x64

    - name: Install Dependencies
      run: |
        pip install -U pip
        pip install -U wheel setuptools tox virtualenv!=20.0.24

    - name: Test
      run: |
        tox -vv -p auto -c tests/${{ matrix.test-directory }}/tox.ini
      env:
        TOX_PARALLEL_NO_SPINNER: 1
        PY_COLORS: 0

  redis:

    strategy:
      matrix:
        test-directory: [datastore_redis]

    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 8080:6379
          - 8081:6379
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Get Date
      id: get-date
      run: |
        echo "::set-output name=date::$(/bin/date -u "+%Y-%m-%d")"
      shell: bash

    - name: Cache Tox and Pip (Linux)
      if: startsWith(runner.os, 'Linux')
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.test-directory }}-${{ hashFiles('tests/${{ matrix.test-directory }}/tox.ini', 'tests/base_requirements.txt') }}-${{ steps.get-date.outputs.date }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.test-directory }}-${{ hashFiles('tests/${{ matrix.test-directory }}/tox.ini', 'tests/base_requirements.txt') }}-
          ${{ runner.os }}-${{ matrix.test-directory }}-

    # Set up all versions of python
    - uses: actions/setup-python@v2
      with:
        python-version: 2.7
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.5
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.6
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.7
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: pypy3
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: pypy2
        architecture: x64

    - name: Install Dependencies
      run: |
        pip install -U pip
        pip install -U wheel setuptools tox virtualenv!=20.0.24

    - name: Test
      run: |
        tox -vv -p auto -c tests/${{ matrix.test-directory }}/tox.ini
      env:
        TOX_PARALLEL_NO_SPINNER: 1
        PY_COLORS: 0

  memcached:

    strategy:
      matrix:
        test-directory: 
          - datastore_bmemcached
          - datastore_memcache

    runs-on: ubuntu-latest

    services:
      memcached:
        image: memcached
        ports:
          - 8080:11211
          - 8081:11211
        # Set health checks to wait until memcached has started
        options: >-
          --health-cmd "timeout 5 bash -c 'cat < /dev/null > /dev/udp/127.0.0.1/11211'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Get Date
      id: get-date
      run: |
        echo "::set-output name=date::$(/bin/date -u "+%Y-%m-%d")"
      shell: bash

    - name: Cache Tox and Pip (Linux)
      if: startsWith(runner.os, 'Linux')
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.test-directory }}-${{ hashFiles('tests/${{ matrix.test-directory }}/tox.ini', 'tests/base_requirements.txt') }}-${{ steps.get-date.outputs.date }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.test-directory }}-${{ hashFiles('tests/${{ matrix.test-directory }}/tox.ini', 'tests/base_requirements.txt') }}-
          ${{ runner.os }}-${{ matrix.test-directory }}-

    # Set up all versions of python
    - uses: actions/setup-python@v2
      with:
        python-version: 2.7
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.5
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.6
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.7
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: pypy3
        architecture: x64

    - uses: actions/setup-python@v2
      with:
        python-version: pypy2
        architecture: x64

    - name: Install Dependencies
      run: |
        pip install -U pip
        pip install -U wheel setuptools tox virtualenv!=20.0.24

    - name: Test
      run: |
        tox -vv -p auto -c tests/${{ matrix.test-directory }}/tox.ini
      env:
        TOX_PARALLEL_NO_SPINNER: 1
        PY_COLORS: 0
