# -*- coding: utf-8 -*-
# =============================================================================
# WARNING: Generated from proto files edited with the following changes.
# 1. Replace listed .proto file paths with newrelic/packages/opentelemetry_proto/
# 2. Replace listed __module__ paths with newrelic.packages.opentelemetry_proto
# This prevents conflicts with other packages using different versions
# of opentelemetry's pb2 files.
# =============================================================================
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: newrelic/packages/opentelemetry_proto/logs.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from newrelic.packages.opentelemetry_proto import common_pb2 as newrelic_dot_packages_dot_opentelemetry__proto_dot_common__pb2
from newrelic.packages.opentelemetry_proto import resource_pb2 as newrelic_dot_packages_dot_opentelemetry__proto_dot_resource__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n0newrelic/packages/opentelemetry_proto/logs.proto\x12%newrelic.packages.opentelemetry_proto\x1a\x32newrelic/packages/opentelemetry_proto/common.proto\x1a\x34newrelic/packages/opentelemetry_proto/resource.proto\"V\n\x08LogsData\x12J\n\rresource_logs\x18\x01 \x03(\x0b\x32\x33.newrelic.packages.opentelemetry_proto.ResourceLogs\"\xb3\x01\n\x0cResourceLogs\x12\x41\n\x08resource\x18\x01 \x01(\x0b\x32/.newrelic.packages.opentelemetry_proto.Resource\x12\x44\n\nscope_logs\x18\x02 \x03(\x0b\x32\x30.newrelic.packages.opentelemetry_proto.ScopeLogs\x12\x12\n\nschema_url\x18\x03 \x01(\tJ\x06\x08\xe8\x07\x10\xe9\x07\"\xb2\x01\n\tScopeLogs\x12J\n\x05scope\x18\x01 \x01(\x0b\x32;.newrelic.packages.opentelemetry_proto.InstrumentationScope\x12\x45\n\x0blog_records\x18\x02 \x03(\x0b\x32\x30.newrelic.packages.opentelemetry_proto.LogRecord\x12\x12\n\nschema_url\x18\x03 \x01(\t\"\x89\x03\n\tLogRecord\x12\x16\n\x0etime_unix_nano\x18\x01 \x01(\x06\x12\x1f\n\x17observed_time_unix_nano\x18\x0b \x01(\x06\x12N\n\x0fseverity_number\x18\x02 \x01(\x0e\x32\x35.newrelic.packages.opentelemetry_proto.SeverityNumber\x12\x15\n\rseverity_text\x18\x03 \x01(\t\x12=\n\x04\x62ody\x18\x05 \x01(\x0b\x32/.newrelic.packages.opentelemetry_proto.AnyValue\x12\x43\n\nattributes\x18\x06 \x03(\x0b\x32/.newrelic.packages.opentelemetry_proto.KeyValue\x12 \n\x18\x64ropped_attributes_count\x18\x07 \x01(\r\x12\r\n\x05\x66lags\x18\x08 \x01(\x07\x12\x10\n\x08trace_id\x18\t \x01(\x0c\x12\x0f\n\x07span_id\x18\n \x01(\x0cJ\x04\x08\x04\x10\x05*\xc3\x05\n\x0eSeverityNumber\x12\x1f\n\x1bSEVERITY_NUMBER_UNSPECIFIED\x10\x00\x12\x19\n\x15SEVERITY_NUMBER_TRACE\x10\x01\x12\x1a\n\x16SEVERITY_NUMBER_TRACE2\x10\x02\x12\x1a\n\x16SEVERITY_NUMBER_TRACE3\x10\x03\x12\x1a\n\x16SEVERITY_NUMBER_TRACE4\x10\x04\x12\x19\n\x15SEVERITY_NUMBER_DEBUG\x10\x05\x12\x1a\n\x16SEVERITY_NUMBER_DEBUG2\x10\x06\x12\x1a\n\x16SEVERITY_NUMBER_DEBUG3\x10\x07\x12\x1a\n\x16SEVERITY_NUMBER_DEBUG4\x10\x08\x12\x18\n\x14SEVERITY_NUMBER_INFO\x10\t\x12\x19\n\x15SEVERITY_NUMBER_INFO2\x10\n\x12\x19\n\x15SEVERITY_NUMBER_INFO3\x10\x0b\x12\x19\n\x15SEVERITY_NUMBER_INFO4\x10\x0c\x12\x18\n\x14SEVERITY_NUMBER_WARN\x10\r\x12\x19\n\x15SEVERITY_NUMBER_WARN2\x10\x0e\x12\x19\n\x15SEVERITY_NUMBER_WARN3\x10\x0f\x12\x19\n\x15SEVERITY_NUMBER_WARN4\x10\x10\x12\x19\n\x15SEVERITY_NUMBER_ERROR\x10\x11\x12\x1a\n\x16SEVERITY_NUMBER_ERROR2\x10\x12\x12\x1a\n\x16SEVERITY_NUMBER_ERROR3\x10\x13\x12\x1a\n\x16SEVERITY_NUMBER_ERROR4\x10\x14\x12\x19\n\x15SEVERITY_NUMBER_FATAL\x10\x15\x12\x1a\n\x16SEVERITY_NUMBER_FATAL2\x10\x16\x12\x1a\n\x16SEVERITY_NUMBER_FATAL3\x10\x17\x12\x1a\n\x16SEVERITY_NUMBER_FATAL4\x10\x18*Y\n\x0eLogRecordFlags\x12\x1f\n\x1bLOG_RECORD_FLAGS_DO_NOT_USE\x10\x00\x12&\n!LOG_RECORD_FLAGS_TRACE_FLAGS_MASK\x10\xff\x01\x42s\n\x1eio.opentelemetry.proto.logs.v1B\tLogsProtoP\x01Z&go.opentelemetry.io/proto/otlp/logs/v1\xaa\x02\x1bOpenTelemetry.Proto.Logs.V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'newrelic.packages.opentelemetry_proto.logs_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\036io.opentelemetry.proto.logs.v1B\tLogsProtoP\001Z&go.opentelemetry.io/proto/otlp/logs/v1\252\002\033OpenTelemetry.Proto.Logs.V1'
  _globals['_SEVERITYNUMBER']._serialized_start=1045
  _globals['_SEVERITYNUMBER']._serialized_end=1752
  _globals['_LOGRECORDFLAGS']._serialized_start=1754
  _globals['_LOGRECORDFLAGS']._serialized_end=1843
  _globals['_LOGSDATA']._serialized_start=197
  _globals['_LOGSDATA']._serialized_end=283
  _globals['_RESOURCELOGS']._serialized_start=286
  _globals['_RESOURCELOGS']._serialized_end=465
  _globals['_SCOPELOGS']._serialized_start=468
  _globals['_SCOPELOGS']._serialized_end=646
  _globals['_LOGRECORD']._serialized_start=649
  _globals['_LOGRECORD']._serialized_end=1042
# @@protoc_insertion_point(module_scope)
