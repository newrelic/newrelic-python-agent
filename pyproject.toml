[tool.ruff]
output-format = "grouped"
line-length = 120
target-version = "py37"
extend-exclude = [
    "newrelic/packages/",
    "setup.py",
    "newrelic/core/infinite_tracing_*_pb2.py",
]
namespace-packages = ["testing_support"]

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.ruff.lint]
isort.split-on-trailing-comma=false
pep8-naming.extend-ignore-names = ["X", "y"]

select = [
    # Enabled linters and rules
    # "F",  # Pyflakes
    # "E",  # pycodestyle
    "W",  # pycodestyle
    "I",  # isort
    # "N",  # pep8-naming
    # "UP",  # pyupgrade
    "YTT",  # flake8-2020
    "ASYNC",  # flake8-async
    # "S",  # flake8-bandit
    # "BLE",  # flake8-blind-except
    # "FBT",  # flake8-boolean-trap
    # "B",  # flake8-bugbear
    "A",  # flake8-builtins
    "COM",  # flake8-commas
    # "C4",  # flake8-comprehensions
    "DTZ",  # flake8-datetimez
    "T10",  # flake8-debugger
    # "EM",  # flake8-errmsg
    "EXE",  # flake8-executable
    "FA",  # flake8-future-annotations
    "ISC",  # flake8-implicit-str-concat
    "ICN",  # flake8-import-conventions
    "LOG",  # flake8-logging
    "G",  # flake8-logging-format
    # "INP",  # flake8-no-pep420
    "PYI",  # flake8-pyi
    # "PT",  # flake8-pytest-style
    "Q",  # flake8-quotes
    "RSE",  # flake8-raise
    # "RET",  # flake8-return
    # "SLF",  # flake8-self
    "SLOT",  # flake8-slots
    # "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "INT",  # flake8-gettext
    # "ARG",  # flake8-unused-arguments
    # "PTH",  # flake8-use-pathlib
    "PGH",  # pygrep-hooks
    # "PL",  # Pylint
    # "TRY",  # tryceratops
    "FLY",  # flynt
    "PERF",  # Perflint
    "FURB",  # refurb
    # "RUF",  # Ruff-specific rules
]

# Disabled Linters
# "ANN",  # flake8-annotations
# "D",  # pydocstyle
# "C90",  # mccabe
# "DJ",  # flake8-django
# "PIE",  # flake8-pie
# "T20",  # flake8-print
# "TC",  # flake8-type-checking
# "TD",  # flake8-todos
# "FIX",  # flake8-fixme
# "ERA",  # eradicate
# "PD",  # pandas-vet
# "NPY",  # NumPy-specific rules
# "FAST",  # FastAPI
# "AIR",  # Airflow

# Preview linters (disabled)
# "CPY",  # flake8-copyright
# "DOC",  # pydoclint

ignore = [
    # Temporarily disabled rules
    "RUF100",  # unused-noqa (TODO: remove this once all linters are enabled)
    "PERF203",  # try-except-in-loop (most of these are unavoidable)
    # Permanently disabled rules
    "D203",  # incorrect-blank-line-before-class
    "D213",  # multi-line-summary-second-line
    "ARG001",  # unused-argument
    "PYI024",  # collections-named-tuple (not currently using type annotations)
    # Ruff recommended linter rules to disable when using formatter
    "W191",  # tab-indentation
    "E111",  # indentation-with-invalid-multiple
    "E114",  # indentation-with-invalid-multiple-comment
    "E117",  # over-indented
    "D206",  # docstring-tab-indentation
    "D300",  # triple-single-quotes
    "Q000",  # bad-quotes-inline-string
    "Q001",  # bad-quotes-multiline-string
    "Q002",  # bad-quotes-docstring
    "Q003",  # avoidable-escaped-quote
    "COM812",  # missing-trailing-comma
    "COM819",  # prohibited-trailing-comma
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    # Disabled rules in tests
    "F401",  # unused-import
    "F811",  # redefined-while-unused (pytest fixtures trigger this)
    "PLR2004",  # magic-value-comparison (comparing to constant values)
    "S101",  # assert (acceptable in tests)
    "ASYNC251",  # blocking-sleep-in-async-function (acceptable in tests)
]

# Alternate linters and formatters
[tool.black]
line-length = 120
include = '\.pyi?$'

[tool.isort]
profile = "black"

[tool.pylint.messages_control]
disable = [
    "C0103",
    "C0114",
    "C0115",
    "C0116",
    "C0209",
    "C0302",
    "C0415",
    "E0401",
    "E1120",
    "R0205",
    "R0401",
    "R0801",
    "R0902",
    "R0903",
    "R0904",
    "R0911",
    "R0912",
    "R0913",
    "R0914",
    "R0915",
    "R1705",
    "R1710",
    "R1725",
    "W0201",
    "W0212",
    "W0223",
    "W0402",
    "W0603",
    "W0612",
    "W0613",
    "W0702",
    "W0703",
    "W0706",
    "line-too-long",
    "redefined-outer-name",
]

[tool.pylint.format]
max-line-length = "120"

[tool.pylint.basic]
good-names = "exc,val,tb"

[tool.bandit]
skips = ["B110", "B101", "B404"]

[tool.flynt]
line-length = 999999
aggressive = true
transform-concats = true
transform-joins = true
exclude = ["newrelic/packages/", "setup.py"]
# setup.py needs to not immediately crash on Python 2 to log error messages, so disable fstrings
