; Formatting Conventions
; Each part of the env name
; 1. Services required to be present to run test suite. Allows us to select which Github Actions runner to place the test suite on.
;    Examples: postgres, mysql, python (pure python, no service required)
; 2. Folder under tests/ that includes the test suite.
;    Requires an entry under changedir to run the test suite from the correct folder.
;    Should be prepended to any deps definitions as well to prevent environments from colliding.
;    Examples: adapter_gunicorn, datastore_asyncpg, framework_aiohttp
;        changedir =
;           adapter_gunicorn: tests/adapter_gunicorn
;           datastore_asyncpg: tests/datastore_asyncpg
;           framework_aiohttp: tests/framework_aiohttp
;        deps =
;           adapter_gunicorn-gunicornlatest: gunicorn
;           datastore_asyncpg: asyncpg
;           framework_aiohttp-aiohttp01: aiohttp<2
;           framework_aiohttp-aiohttp0202: aiohttp<2.3
; 3. Python version required. Uses the standard tox definitions. (https://tox.readthedocs.io/en/latest/config.html#tox-environments)
;    Examples: py27,py37,py38,py39,pypy27,pypy38
; 4. Library and version (Optional). Used when testing multiple versions of the library, and may be omitted when only testing a single version.
;    Versions should be specified with 2 digits per version number, so <3 becomes 02 and <3.5 becomes 0304. latest and master are also acceptable versions.
;    Examples: uvicorn03, CherryPy0302, uvicornlatest
;       deps =
;           adapter_uvicorn-uvicorn03: uvicorn<0.4
;           adapter_uvicorn-uvicornlatest: uvicorn
;           framework_cherrypy-CherryPy0302: CherryPy<3.3.0
;           framework_cherrypy-CherryPy0303: CherryPy<3.4.0
; 5. With or without New Relic C extensions (Optional). Used for testing agent features.
;    Examples: with_extensions, without_extensions
;       envlist =
;           python-agent_features-pypy38-without_extensions,
;           python-agent_streaming-py37-{with,without}_extensions,
;
; Full Format:
;   services_required-tests_folder-python_version-library_and_version[optional]-with/without_c_extensions[optional]
;
; Full Examples:
;   - memcached-datastore_bmemcached-py37-memcached030
;   - python-agent_unittests-py38-with_extensions
;   - python-adapter_gevent-py27

[tox]
requires = virtualenv<20.22.0
setupdir = {toxinidir}
; Fail tests when interpreters are missing.
skip_missing_interpreters = false
envlist =
    python-adapter_cheroot-{py27,py37,py38,py39,py310,py311},
    python-adapter_daphne-{py37,py38,py39,py310,py311}-daphnelatest,
    python-adapter_gevent-{py27,py37,py38,py310,py311},
    python-adapter_gunicorn-{py37,py38,py39,py310,py311}-aiohttp3-gunicornlatest,
    python-adapter_hypercorn-{py37,py38,py39,py310,py311}-hypercornlatest,
    python-adapter_hypercorn-py38-hypercorn{0010,0011,0012,0013},
    python-adapter_uvicorn-{py37,py38,py39,py310,py311}-uvicorn{014,latest},
    python-adapter_waitress-{py37,py38,py39,py310}-waitress02,
    python-adapter_waitress-{py37,py38,py39,py310,py311}-waitresslatest,
    python-agent_features-{py27,py37,py38,py39,py310,py311}-{with,without}_extensions,
    python-agent_features-{pypy27,pypy38}-without_extensions,
    python-agent_streaming-py27-grpc0125-{with,without}_extensions,
    python-agent_streaming-{py37,py38,py39,py310,py311}-protobuf04-{with,without}_extensions,
    python-agent_streaming-py39-protobuf{03,0319}-{with,without}_extensions,
    python-agent_unittests-{py27,py37,py38,py39,py310,py311}-{with,without}_extensions,
    python-agent_unittests-{pypy27,pypy38}-without_extensions,
    python-application_celery-{py27,py37,py38,py39,py310,py311,pypy27,pypy38},
    gearman-application_gearman-{py27,pypy27},
    python-mlmodel_sklearn-{py38,py39,py310,py311}-scikitlearnlatest,
    python-mlmodel_sklearn-{py37}-scikitlearn0101,
    python-component_djangorestframework-py27-djangorestframework0300,
    python-component_djangorestframework-{py37,py38,py39,py310,py311}-djangorestframeworklatest,
    python-component_flask_rest-{py37,py38,py39,pypy38}-flaskrestxlatest,
    python-component_flask_rest-{py27,pypy27}-flaskrestx051,
    python-component_graphqlserver-{py37,py38,py39,py310,py311},
    python-component_tastypie-{py27,pypy27}-tastypie0143,
    python-component_tastypie-{py37,py38,py39,pypy38}-tastypie{0143,latest},
    python-coroutines_asyncio-{py37,py38,py39,py310,py311,pypy38},
    python-cross_agent-{py27,py37,py38,py39,py310,py311}-{with,without}_extensions,
    python-cross_agent-pypy27-without_extensions,
    postgres-datastore_asyncpg-{py37,py38,py39,py310,py311},
    memcached-datastore_bmemcached-{pypy27,py27,py37,py38,py39,py310,py311}-memcached030,
    elasticsearchserver07-datastore_elasticsearch-{py27,py37,py38,py39,py310,py311,pypy27,pypy38}-elasticsearch07,
    elasticsearchserver08-datastore_elasticsearch-{py37,py38,py39,py310,py311,pypy38}-elasticsearch08,
    memcached-datastore_memcache-{py27,py37,py38,py39,py310,py311,pypy27,pypy38}-memcached01,
    mysql-datastore_mysql-mysql080023-py27,
    mysql-datastore_mysql-mysqllatest-{py37,py38,py39,py310,py311},
    firestore-datastore_firestore-{py37,py38,py39,py310,py311},
    postgres-datastore_postgresql-{py37,py38,py39},
    postgres-datastore_psycopg2-{py27,py37,py38,py39,py310,py311}-psycopg2latest
    postgres-datastore_psycopg2cffi-{py27,pypy27,py37,py38,py39,py310,py311}-psycopg2cffilatest,
    postgres-datastore_pyodbc-{py27,py37,py311}-pyodbclatest
    memcached-datastore_pylibmc-{py27,py37},
    memcached-datastore_pymemcache-{py27,py37,py38,py39,py310,py311,pypy27,pypy38},
    mongodb-datastore_pymongo-{py27,py37,py38,py39,py310,py311,pypy27}-pymongo{03},
    mongodb-datastore_pymongo-{py37,py38,py39,py310,py311,pypy27,pypy38}-pymongo04,
    mssql-datastore_pymssql-{py37,py38,py39,py310,py311},
    mysql-datastore_pymysql-{py27,py37,py38,py39,py310,py311,pypy27,pypy38},
    solr-datastore_pysolr-{py27,py37,py38,py39,py310,py311,pypy27,pypy38},
    redis-datastore_redis-{py37,py38,py39,py310,py311,pypy38}-redis{0400,latest},
    rediscluster-datastore_rediscluster-{py37,py311,pypy38}-redis{latest},
    python-datastore_sqlite-{py27,py37,py38,py39,py310,py311,pypy27,pypy38},
    python-external_boto3-{py27,py37,py38,py39,py310,py311}-boto01,
    python-external_botocore-{py37,py38,py39,py310,py311}-botocorelatest,
    python-external_botocore-{py311}-botocore128,
    python-external_botocore-py310-botocore0125,
    python-external_feedparser-py27-feedparser{05,06},
    python-external_http-{py27,py37,py38,py39,py310,py311,pypy27},
    python-external_httplib-{py27,py37,py38,py39,py310,py311,pypy27,pypy38},
    python-external_httplib2-{py27,py37,py38,py39,py310,py311,pypy27,pypy38},
    python-external_httpx-{py37,py38,py39,py310,py311},
    python-external_requests-{py27,py37,py38,py39,py310,py311,pypy27,pypy38},
    python-external_urllib3-{py27,py37,pypy27}-urllib3{0109},
    python-external_urllib3-{py27,py37,py38,py39,py310,py311,pypy27,pypy38}-urllib3latest,
    python-framework_aiohttp-{py37,py38,py39,py310,py311,pypy38}-aiohttp03,
    python-framework_ariadne-{py37,py38,py39,py310,py311}-ariadnelatest,
    python-framework_ariadne-py37-ariadne{0011,0012,0013},
    python-framework_bottle-{py27,py37,py38,py39,py310,py311,pypy27,pypy38}-bottle0012,
    ; CherryPy still uses inspect.getargspec, deprecated in favor of inspect.getfullargspec.  Not supported in 3.11
    python-framework_cherrypy-{py37,py38,py39,py310,py311,pypy38}-CherryPylatest,
    python-framework_django-{pypy27,py27}-Django0103,
    python-framework_django-{pypy27,py27,py37}-Django0108,
    python-framework_django-{py39}-Django{0200,0201,0202,0300,0301,latest},
    python-framework_django-{py37,py38,py39,py310,py311}-Django0302,
    python-framework_falcon-{py27,py37,py38,py39,pypy27,pypy38}-falcon0103,
    python-framework_falcon-{py37,py38,py39,py310,pypy38}-falcon{0200,master},
    # Falcon master branch failing on 3.11 currently.
    python-framework_falcon-py311-falcon0200,
    python-framework_fastapi-{py37,py38,py39,py310,py311},
    ; temporarily disabling flaskmaster tests
    python-framework_flask-{py37,py38,py39,py310,py311,pypy38}-flasklatest,
    python-framework_graphene-{py37,py38,py39,py310,py311}-graphenelatest,
    python-framework_graphql-{py37,py38,py39,py310,py311,pypy38}-graphqllatest,
    ; temporarily disabling graphqlmaster tests
    python-framework_graphql-py37-graphql{0300,0301,0302},
    grpc-framework_grpc-py27-grpc0125,
    grpc-framework_grpc-{py37,py38,py39,py310,py311}-grpclatest,
    python-framework_pyramid-{pypy27,py27,pypy38,py37,py38,py39,py310,py311}-Pyramid0110-cornice,
    python-framework_pyramid-{py37,py38,py39,py310,py311,pypy38}-Pyramidlatest,
    python-framework_sanic-{py38,pypy38}-sanic{200904,210300,2109,2112,2203,2290},
    python-framework_sanic-{py37,py38,py39,py310,py311,pypy38}-saniclatest,
    python-framework_starlette-{py310,pypy38}-starlette{0014,0015,0019,0028},
    python-framework_starlette-{py37,py38}-starlette{002001},
    python-framework_starlette-{py37,py38,py39,py310,py311,pypy38}-starlettelatest,
    python-framework_strawberry-{py37,py38,py39,py310,py311}-strawberrylatest,
    python-logger_logging-{py27,py37,py38,py39,py310,py311,pypy27,pypy38},
    python-logger_loguru-{py37,py38,py39,py310,py311,pypy38}-logurulatest,
    python-logger_loguru-py39-loguru{06,05},
    python-logger_structlog-{py37,py38,py39,py310,py311,pypy38}-structloglatest,
    python-framework_tornado-{py38,py39,py310,py311}-tornadolatest,
    python-framework_tornado-{py38,py39,py310,py311}-tornadomaster,
    rabbitmq-messagebroker_pika-{py37,py38,py39,py310,py311,pypy38}-pikalatest,
    kafka-messagebroker_confluentkafka-{py37,py38,py39,py310,py311}-confluentkafkalatest,
    kafka-messagebroker_confluentkafka-{py27,py39}-confluentkafka{0107,0106},
    ; confluent-kafka had a bug in 1.8.2's setup.py file which was incompatible with 2.7.
    kafka-messagebroker_confluentkafka-{py39}-confluentkafka{0108},
    kafka-messagebroker_kafkapython-{pypy27,py27,py37,py38,pypy38}-kafkapythonlatest,
    kafka-messagebroker_kafkapython-{py27,py38}-kafkapython{020001,020000},
    python-template_genshi-{py27,py37,py311}-genshilatest
    python-template_jinja2-{py37,py311}-jinja2latest
    python-template_mako-{py27,py37,py310,py311}

[testenv]
deps =
    # Base Dependencies
    {py37,py38,py39,py310,py311,pypy38}: pytest==7.2.2
    {py27,pypy27}: pytest==4.6.11
    iniconfig
    coverage
    WebTest==2.0.35

    # Test Suite Dependencies
    adapter_cheroot: cheroot
    adapter_daphne-daphnelatest: daphne
    adapter_gevent: WSGIProxy2
    adapter_gevent: gevent
    adapter_gevent: urllib3
    adapter_gunicorn-aiohttp1: aiohttp<2.0
    adapter_gunicorn-aiohttp3: aiohttp<4.0
    adapter_gunicorn-gunicorn19: gunicorn<20
    adapter_gunicorn-gunicornlatest: gunicorn
    adapter_hypercorn-hypercornlatest: hypercorn
    adapter_hypercorn-hypercorn0013: hypercorn<0.14
    adapter_hypercorn-hypercorn0012: hypercorn<0.13
    adapter_hypercorn-hypercorn0011: hypercorn<0.12
    adapter_hypercorn-hypercorn0010: hypercorn<0.11
    adapter_uvicorn-uvicorn014: uvicorn<0.15
    adapter_uvicorn-uvicornlatest: uvicorn
    adapter_uvicorn: typing-extensions
    adapter_waitress: WSGIProxy2
    adapter_waitress-waitress02: waitress<2.1
    adapter_waitress-waitresslatest: waitress
    agent_features: beautifulsoup4
    agent_features-{py37,py38,py39,py310,py311,pypy38}: protobuf
    agent_features-{py27,pypy27}: protobuf<3.18.0
    application_celery: celery<6.0
    application_celery-{py37,pypy38}: importlib-metadata<5.0
    application_gearman: gearman<3.0.0
    mlmodel_sklearn: pandas
    mlmodel_sklearn: protobuf
    mlmodel_sklearn: numpy
    mlmodel_sklearn: scipy<1.11.0
    mlmodel_sklearn-scikitlearnlatest: scikit-learn
    mlmodel_sklearn-scikitlearn0101: scikit-learn<1.1
    component_djangorestframework-djangorestframework0300: Django<1.9
    component_djangorestframework-djangorestframework0300: djangorestframework<3.1
    component_djangorestframework-djangorestframeworklatest: Django
    component_djangorestframework-djangorestframeworklatest: djangorestframework
    component_flask_rest: flask
    component_flask_rest: flask-restful
    component_flask_rest: jinja2
    component_flask_rest: itsdangerous
    component_flask_rest-flaskrestxlatest: flask-restx
    ; Pin Flask version until flask-restx is updated to support v3
    component_flask_rest-flaskrestxlatest: flask<3.0
    component_flask_rest-flaskrestx051: flask-restx<1.0
    component_graphqlserver: graphql-server[sanic,flask]==3.0.0b5
    component_graphqlserver: sanic>20
    component_graphqlserver: Flask
    component_graphqlserver: markupsafe<2.1
    component_graphqlserver: jinja2<3.1
    component_tastypie-tastypie0143: django-tastypie<0.14.4
    component_tastypie-{py27,pypy27}-tastypie0143: django<1.12
    component_tastypie-{py37,py38,py39,py310,py311,pypy38}-tastypie0143: django<3.0.1
    component_tastypie-{py37,py38,py39,py310,py311,pypy38}-tastypie0143: asgiref<3.7.1  # asgiref==3.7.1 only suppport Python 3.10+
    component_tastypie-tastypielatest: django-tastypie
    component_tastypie-tastypielatest: django<4.1
    component_tastypie-tastypielatest: asgiref<3.7.1  # asgiref==3.7.1 only suppport Python 3.10+
    coroutines_asyncio-{py37,py38,py39,py310,py311}: uvloop
    cross_agent: mock==1.0.1
    cross_agent: requests
    datastore_asyncpg: asyncpg
    datastore_bmemcached-memcached030: python-binary-memcached<0.31
    datastore_bmemcached-memcached030: uhashring<2.0
    datastore_elasticsearch: requests
    datastore_elasticsearch-elasticsearch07: elasticsearch<8.0
    datastore_elasticsearch-elasticsearch08: elasticsearch<9.0
    datastore_firestore: google-cloud-firestore
    datastore_memcache-memcached01: python-memcached<2
    datastore_mysql-mysqllatest: mysql-connector-python
    datastore_mysql-mysql080023: mysql-connector-python<8.0.24
    datastore_mysql: protobuf<4
    datastore_postgresql: py-postgresql<1.3
    datastore_psycopg2-psycopg2latest: psycopg2-binary
    datastore_psycopg2cffi-psycopg2cffilatest: psycopg2cffi
    datastore_pyodbc-pyodbclatest: pyodbc
    datastore_pylibmc: pylibmc
    datastore_pymemcache: pymemcache
    datastore_pymongo-pymongo03: pymongo<4.0
    datastore_pymongo-pymongo04: pymongo<5.0
    datastore_pymssql: pymssql
    datastore_pymysql: PyMySQL<0.11
    datastore_pysolr: pysolr<4.0
    datastore_redis-redislatest: redis
    datastore_rediscluster-redislatest: redis
    datastore_redis-redis0400: redis<4.1
    external_boto3-boto01: boto3<2.0
    external_boto3-boto01: moto<2.0
    external_boto3-py27: rsa<4.7.1
    external_botocore-botocorelatest: botocore
    external_botocore-botocore128: botocore<1.29
    external_botocore-botocore0125: botocore<1.26
    external_botocore-{py37,py38,py39,py310,py311}: moto[awslambda,ec2,iam]<3.0
    external_botocore-py27: rsa<4.7.1
    external_botocore-py27: moto[awslambda,ec2,iam]<2.0
    external_feedparser-feedparser05: feedparser<6
    external_feedparser-feedparser06: feedparser<7
    external_httplib2: httplib2<1.0
    external_httpx: httpx<0.17
    external_requests: urllib3
    external_requests: requests
    external_urllib3-urllib30109: urllib3<1.10
    external_urllib3-urllib3latest: urllib3
    framework_aiohttp-aiohttp03: aiohttp
    framework_ariadne-ariadnelatest: ariadne
    framework_ariadne-ariadne0011: ariadne<0.12
    framework_ariadne-ariadne0012: ariadne<0.13
    framework_ariadne-ariadne0013: ariadne<0.14
    framework_bottle-bottle0012: bottle<0.13.0
    framework_bottle: jinja2<3.1
    framework_bottle: markupsafe<2.1
    framework_cherrypy: routes
    framework_cherrypy-CherryPylatest: CherryPy
    framework_django-Django0103: Django<1.4
    framework_django-Django0108: Django<1.9
    framework_django-Django0200: Django<2.1
    framework_django-Django0201: Django<2.2
    framework_django-Django0202: Django<2.3
    framework_django-Django0300: Django<3.1
    framework_django-Django0301: Django<3.2
    framework_django-Django0302: Django<3.3
    framework_django-Djangolatest: Django
    framework_django-Djangomaster: https://github.com/django/django/archive/main.zip
    framework_falcon-falcon0103: falcon<1.4
    framework_falcon-falcon0200: falcon<2.1
    framework_falcon-falconmaster: https://github.com/falconry/falcon/archive/master.zip
    framework_fastapi: fastapi
    framework_fastapi: asyncio
    framework_flask: markupsafe<2.1
    framework_flask: jinja2<3.1
    framework_flask: Flask-Compress
    framework_flask-flasklatest: flask[async]
    framework_flask-flaskmaster: https://github.com/pallets/werkzeug/archive/main.zip
    framework_flask-flaskmaster: https://github.com/pallets/flask/archive/main.zip#egg=flask[async]
    framework_graphene-graphenelatest: graphene
    framework_graphql-graphqllatest: graphql-core<4
    framework_graphql-graphql0300: graphql-core<3.1
    framework_graphql-graphql0301: graphql-core<3.2
    framework_graphql-graphql0302: graphql-core<3.3
    framework_graphql-graphqlmaster: https://github.com/graphql-python/graphql-core/archive/main.zip
    framework_grpc-grpclatest: protobuf
    framework_grpc-grpclatest: grpcio
    framework_grpc-grpclatest: grpcio-tools
    grpc0125: grpcio<1.26
    grpc0125: grpcio-tools<1.26
    grpc0125: protobuf<3.18.0
    protobuf0319: protobuf<3.20
    protobuf03: protobuf<4
    protobuf04: protobuf<5
    framework_pyramid: routes
    framework_pyramid-cornice: cornice!=5.0.0
    framework_pyramid-Pyramid0110: Pyramid<1.11
    framework_pyramid-Pyramidlatest: Pyramid
    framework_sanic-sanic200904: sanic<20.9.5
    framework_sanic-sanic210300: sanic<21.3.1
    framework_sanic-sanic2109: sanic<21.10
    framework_sanic-sanic2112: sanic<21.13
    framework_sanic-sanic2203: sanic<22.4
    framework_sanic-sanic2290: sanic<22.9.1
    framework_sanic-saniclatest: sanic
    framework_sanic-sanic{200904,210300,2109,2112,2203,2290}: websockets<11
    ; For test_exception_in_middleware test, anyio is used:
    ; https://github.com/encode/starlette/pull/1157
    ; but anyiolatest creates breaking changes to our tests 
    ; (but not the instrumentation):
    ; https://github.com/agronholm/anyio/releases/tag/4.0.0
    framework_starlette: anyio<4
    framework_starlette-starlette0014: starlette<0.15
    framework_starlette-starlette0015: starlette<0.16
    framework_starlette-starlette0019: starlette<0.20
    framework_starlette-starlette002001: starlette==0.20.1
    framework_starlette-starlette0028: starlette<0.29
    framework_starlette-starlettelatest: starlette
    framework_strawberry: starlette
    framework_strawberry-strawberrylatest: strawberry-graphql
    framework_tornado: pycurl
    framework_tornado-tornadolatest: tornado
    framework_tornado-tornadomaster: https://github.com/tornadoweb/tornado/archive/master.zip
    logger_loguru-logurulatest: loguru
    logger_loguru-loguru06: loguru<0.7
    logger_loguru-loguru05: loguru<0.6
    logger_structlog-structloglatest: structlog
    messagebroker_pika-pikalatest: pika
    messagebroker_pika: tornado<5
    messagebroker_pika-{py27,pypy27}: enum34
    messagebroker_confluentkafka-confluentkafkalatest: confluent-kafka
    messagebroker_confluentkafka-confluentkafka0108: confluent-kafka<1.9
    messagebroker_confluentkafka-confluentkafka0107: confluent-kafka<1.8
    messagebroker_confluentkafka-confluentkafka0106: confluent-kafka<1.7
    messagebroker_kafkapython-kafkapythonlatest: kafka-python
    messagebroker_kafkapython-kafkapython020001: kafka-python<2.0.2
    messagebroker_kafkapython-kafkapython020000: kafka-python<2.0.1
    template_genshi-genshilatest: genshi
    template_jinja2-jinja2latest: Jinja2
    template_mako: mako

setenv =
    PYTHONPATH={toxinidir}/tests
    TOX_ENV_DIR={envdir}
    COVERAGE_FILE={envdir}/.coverage.{envname}
    COVERAGE_RCFILE={toxinidir}/tox.ini
    with_extensions: NEW_RELIC_EXTENSIONS = true
    without_extensions: NEW_RELIC_EXTENSIONS = false
    agent_features: NEW_RELIC_APDEX_T = 1000
    framework_grpc: PYTHONPATH={toxinidir}/tests/:{toxinidir}/tests/framework_grpc/sample_application
    framework_tornado-{py38,py39,py310,py311}: PYCURL_SSL_LIBRARY=openssl
    framework_tornado-{py38,py39,py310,py311}: LDFLAGS=-L/usr/local/opt/openssl/lib
    framework_tornado-{py38,py39,py310,py311}: CPPFLAGS=-I/usr/local/opt/openssl/include

passenv =
    NEW_RELIC_DEVELOPER_MODE
    NEW_RELIC_LICENSE_KEY
    NEW_RELIC_HOST
    GITHUB_ACTIONS

commands =
    framework_grpc: python -m grpc_tools.protoc \
    framework_grpc:     --proto_path={toxinidir}/tests/framework_grpc/sample_application \
    framework_grpc:     --python_out={toxinidir}/tests/framework_grpc/sample_application \
    framework_grpc:     --grpc_python_out={toxinidir}/tests/framework_grpc/sample_application \
    framework_grpc:     /{toxinidir}/tests/framework_grpc/sample_application/sample_application.proto

    framework_tornado-{py38,py39,py310,py311}: pip install --ignore-installed --config-settings="--build-option=--with-openssl" pycurl
    coverage run -m pytest -v []

allowlist_externals={toxinidir}/.github/scripts/*

install_command=
    {toxinidir}/.github/scripts/retry.sh 3 pip install {opts} {packages}

extras =
    agent_streaming: infinite-tracing

changedir =
    adapter_cheroot: tests/adapter_cheroot
    adapter_daphne: tests/adapter_daphne
    adapter_gevent: tests/adapter_gevent
    adapter_gunicorn: tests/adapter_gunicorn
    adapter_hypercorn: tests/adapter_hypercorn
    adapter_uvicorn: tests/adapter_uvicorn
    adapter_waitress: tests/adapter_waitress
    agent_features: tests/agent_features
    agent_streaming: tests/agent_streaming
    agent_unittests: tests/agent_unittests
    application_celery: tests/application_celery
    application_gearman: tests/application_gearman
    mlmodel_sklearn: tests/mlmodel_sklearn
    component_djangorestframework: tests/component_djangorestframework
    component_flask_rest: tests/component_flask_rest
    component_graphqlserver: tests/component_graphqlserver
    component_tastypie: tests/component_tastypie
    coroutines_asyncio: tests/coroutines_asyncio
    cross_agent: tests/cross_agent
    datastore_asyncpg: tests/datastore_asyncpg
    datastore_bmemcached: tests/datastore_bmemcached
    datastore_elasticsearch: tests/datastore_elasticsearch
    datastore_firestore: tests/datastore_firestore
    datastore_memcache: tests/datastore_memcache
    datastore_mysql: tests/datastore_mysql
    datastore_postgresql: tests/datastore_postgresql
    datastore_psycopg2: tests/datastore_psycopg2
    datastore_pyodbc: tests/datastore_pyodbc
    datastore_psycopg2cffi: tests/datastore_psycopg2cffi
    datastore_pylibmc: tests/datastore_pylibmc
    datastore_pymemcache: tests/datastore_pymemcache
    datastore_pymongo: tests/datastore_pymongo
    datastore_pymssql: tests/datastore_pymssql
    datastore_pymysql: tests/datastore_pymysql
    datastore_pysolr: tests/datastore_pysolr
    datastore_redis: tests/datastore_redis
    datastore_rediscluster: tests/datastore_rediscluster
    datastore_sqlite: tests/datastore_sqlite
    external_boto3: tests/external_boto3
    external_botocore: tests/external_botocore
    external_feedparser: tests/external_feedparser
    external_http: tests/external_http
    external_httplib: tests/external_httplib
    external_httplib2: tests/external_httplib2
    external_httpx: tests/external_httpx
    external_requests: tests/external_requests
    external_urllib3: tests/external_urllib3
    framework_aiohttp: tests/framework_aiohttp
    framework_ariadne: tests/framework_ariadne
    framework_bottle: tests/framework_bottle
    framework_cherrypy: tests/framework_cherrypy
    framework_django: tests/framework_django
    framework_falcon: tests/framework_falcon
    framework_fastapi: tests/framework_fastapi
    framework_flask: tests/framework_flask
    framework_graphene: tests/framework_graphene
    framework_graphql: tests/framework_graphql
    framework_grpc: tests/framework_grpc
    framework_pyramid: tests/framework_pyramid
    framework_sanic: tests/framework_sanic
    framework_starlette: tests/framework_starlette
    framework_strawberry: tests/framework_strawberry
    framework_tornado: tests/framework_tornado
    logger_logging: tests/logger_logging
    logger_loguru: tests/logger_loguru
    logger_structlog: tests/logger_structlog
    messagebroker_pika: tests/messagebroker_pika
    messagebroker_confluentkafka: tests/messagebroker_confluentkafka
    messagebroker_kafkapython: tests/messagebroker_kafkapython
    template_genshi: tests/template_genshi
    template_jinja2: tests/template_jinja2
    template_mako: tests/template_mako


[pytest]
usefixtures =
    collector_available_fixture
    collector_agent_registration

[coverage:run]
branch = True
disable_warnings = couldnt-parse
source = newrelic

[coverage:paths]
source =
    newrelic/
    .tox/**/site-packages/newrelic/
    /__w/**/site-packages/newrelic/

[coverage:html]
directory = ${TOX_ENV_DIR-.}/htmlcov

[coverage:xml]
output = ${TOX_ENV_DIR-.}/coverage.xml